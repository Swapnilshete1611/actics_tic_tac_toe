{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PFEL\\\\Desktop\\\\Tic Tac Toe\\\\react-tic-tac-toe-hooks-master\\\\react-tic-tac-toe-hooks-master\\\\src\\\\components\\\\Game.js\";\n// import React, { useState } from \"react\";\n// import { calculateWinner } from \"../helper\";\n// import Board from \"./Board\";\n// const Game = () => {\n//   const [history, setHistory] = useState([Array(9).fill(null)]);\n//   const [stepNumber, setStepNumber] = useState(0);\n//   const [xIsNext, setXisNext] = useState(true);\n//   const winner = calculateWinner(history[stepNumber]);\n//   const xO = xIsNext ? \"X\" : \"O\";\n//   const handleClick = (i) => {\n//     const historyPoint = history.slice(0, stepNumber + 1);\n//     const current = historyPoint[stepNumber];\n//     const squares = [...current];\n//     // return if won or occupied\n//     if (winner || squares[i]) return;\n//     // select square\n//     squares[i] = xO;\n//     setHistory([...historyPoint, squares]);\n//     setStepNumber(historyPoint.length);\n//     setXisNext(!xIsNext);\n//   };\n//   const jumpTo = (step) => {\n//     setStepNumber(step);\n//     setXisNext(step % 2 === 0);\n//   };\n//   const renderMoves = () => {\n//     history.map((_step, move) => {\n//       if(move>0 && move<=5){\n//       const destination = move ? `Go to move #${move}` : \"Go to Start\";\n//       return (\n//         <li key={move}>\n//           <button onClick={() => jumpTo(move)}>{destination}</button>\n//         </li>\n//       );\n//       }\n//     });\n//     if(winner){\n//       alert(`Congratulations.. ! ${winner} won the Game !`);window.location.reload();\n//     }\n//   }\n//   // window.addEventListener(\"beforeunload\", (ev) => \n//   // {  \n//   //     ev.preventDefault();\n//   //     return ev.returnValue = 'Are you sure you want to close?';\n//   // });\n//   return (\n//     <>\n//      <h1>        Tic Tac Toe          </h1>\n//       <Board squares={history[stepNumber]} onClick={handleClick} />\n//       <div className=\"info-wrapper\">\n//         <div>\n//           <h3>History</h3>\n//           {renderMoves()}\n//         </div>\n//         <h3></h3>\n//         <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\n//             {/* alert(`Ta da ! ${winner} won the Game !`) */}\n//             <div><button onClick={() => window.location.reload()}>Clear Game</button></div>       \n//       </div>\n//     </>\n//   );\n// };\n// export default Game;\nimport React, { useState } from \"react\";\nimport { calculateWinner } from \"../helper\";\nimport Board from \"./Board\";\n\nconst Game = () => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber]);\n  const xO = xIsNext ? \"X\" : \"O\";\n\n  const handleClick = i => {\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current]; // return if won or occupied\n\n    if (winner || squares[i]) return; // select square\n\n    squares[i] = xO;\n    setHistory([...historyPoint, squares]);\n    setStepNumber(historyPoint.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n\n  const renderMoves = () => history.map((_step, move) => {\n    if (move > 0 && move <= 5) {\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, destination));\n    }\n\n    if (winner) {\n      alert(`Congratulations.. ! ${winner} won the Game !`);\n      window.location.reload();\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }, \"        Tic Tac Toe          \")), /*#__PURE__*/React.createElement(Board, {\n    squares: history[stepNumber],\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"History\"), renderMoves()), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, winner ? () => {\n    alert(`Congratulations.. ! ${winner} won the Game !`);\n    window.location.reload();\n  } : null), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, winner ? \"Winner: \" + winner : \"Next Player: \" + xO), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 18\n    }\n  }, \"Clear Game\"))));\n};\n\nexport default Game; // Tushar Done","map":{"version":3,"sources":["C:/Users/PFEL/Desktop/Tic Tac Toe/react-tic-tac-toe-hooks-master/react-tic-tac-toe-hooks-master/src/components/Game.js"],"names":["React","useState","calculateWinner","Board","Game","history","setHistory","Array","fill","stepNumber","setStepNumber","xIsNext","setXisNext","winner","xO","handleClick","i","historyPoint","slice","current","squares","length","jumpTo","step","renderMoves","map","_step","move","destination","alert","window","location","reload"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { calculateWinner } from \"../helper\";\r\n// import Board from \"./Board\";\r\n\r\n// const Game = () => {\r\n//   const [history, setHistory] = useState([Array(9).fill(null)]);\r\n//   const [stepNumber, setStepNumber] = useState(0);\r\n//   const [xIsNext, setXisNext] = useState(true);\r\n//   const winner = calculateWinner(history[stepNumber]);\r\n//   const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n//   const handleClick = (i) => {\r\n//     const historyPoint = history.slice(0, stepNumber + 1);\r\n//     const current = historyPoint[stepNumber];\r\n//     const squares = [...current];\r\n//     // return if won or occupied\r\n//     if (winner || squares[i]) return;\r\n//     // select square\r\n//     squares[i] = xO;\r\n//     setHistory([...historyPoint, squares]);\r\n//     setStepNumber(historyPoint.length);\r\n//     setXisNext(!xIsNext);\r\n//   };\r\n\r\n//   const jumpTo = (step) => {\r\n//     setStepNumber(step);\r\n//     setXisNext(step % 2 === 0);\r\n//   };\r\n\r\n//   const renderMoves = () => {\r\n//     history.map((_step, move) => {\r\n\r\n//       if(move>0 && move<=5){\r\n//       const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n//       return (\r\n//         <li key={move}>\r\n//           <button onClick={() => jumpTo(move)}>{destination}</button>\r\n//         </li>\r\n//       );\r\n\r\n//       }\r\n//     });\r\n//     if(winner){\r\n//       alert(`Congratulations.. ! ${winner} won the Game !`);window.location.reload();\r\n//     }\r\n//   }\r\n    \r\n//   // window.addEventListener(\"beforeunload\", (ev) => \r\n//   // {  \r\n//   //     ev.preventDefault();\r\n//   //     return ev.returnValue = 'Are you sure you want to close?';\r\n//   // });\r\n\r\n//   return (\r\n//     <>\r\n//      <h1>        Tic Tac Toe          </h1>\r\n//       <Board squares={history[stepNumber]} onClick={handleClick} />\r\n//       <div className=\"info-wrapper\">\r\n//         <div>\r\n//           <h3>History</h3>\r\n//           {renderMoves()}\r\n//         </div>\r\n//         <h3></h3>\r\n        \r\n//         <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n        \r\n//             {/* alert(`Ta da ! ${winner} won the Game !`) */}\r\n//             <div><button onClick={() => window.location.reload()}>Clear Game</button></div>       \r\n          \r\n          \r\n          \r\n//       </div>\r\n//     </>\r\n//   );\r\n\r\n  \r\n// };\r\n\r\n// export default Game;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]);\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n  const handleClick = (i) => {\r\n    const historyPoint = history.slice(0, stepNumber + 1);\r\n    const current = historyPoint[stepNumber];\r\n    const squares = [...current];\r\n    // return if won or occupied\r\n    if (winner || squares[i]) return;\r\n    // select square\r\n    squares[i] = xO;\r\n    setHistory([...historyPoint, squares]);\r\n    setStepNumber(historyPoint.length);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXisNext(step % 2 === 0);\r\n  };\r\n\r\n  const renderMoves = () =>\r\n    history.map((_step, move) => {\r\n\r\n      if(move>0 && move<=5){\r\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{destination}</button>\r\n        </li>\r\n      );\r\n\r\n      }\r\n\r\n      if(winner){\r\n        alert(`Congratulations.. ! ${winner} won the Game !`);window.location.reload();\r\n      }\r\n\r\n    });\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n    <div >\r\n     <h1>        Tic Tac Toe          </h1>\r\n     </div>\r\n      <Board squares={history[stepNumber]} onClick={handleClick} />\r\n      <div className=\"info-wrapper\">\r\n        <div>\r\n          <h3>History</h3>\r\n          {renderMoves()}\r\n        </div>\r\n        <h3>{winner ? () => { alert(`Congratulations.. ! ${winner} won the Game !`);window.location.reload()} : null}</h3>\r\n        \r\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n        \r\n            {/* alert(`Ta da ! ${winner} won the Game !`) */}\r\n            <div><button onClick={() => window.location.reload()}>Clear Game</button></div>       \r\n          \r\n          \r\n      </div>\r\n    </>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Game;\r\n\r\n\r\n\r\n// Tushar Done"]},"metadata":{},"sourceType":"module"}